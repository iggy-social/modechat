import{H as N,T as S,M as R}from"./components.1b435cbf.js";import{t as E}from"./tokens.d7376cd3.js";import{a as v,Z as M,A as b,C as g,P as _,l as L,x as U,o as l,b as c,f as n,m as u,y as m,z as k,i as f,t as d,F as A,G as W,c as D,r as C,e as p,w as y}from"./entry.00240a2c.js";import{a as V,E as w}from"./balanceUtils.ed726eea.js";import{b as F,c as H}from"./domainUtils.fa9a68dd.js";import{h as x}from"./textUtils.98bf6f1d.js";import{W as B}from"./WaitingToast.e21162a7.js";import{C as j}from"./ConnectWalletButton.301626d5.js";import"./composables.48731fbe.js";const P={name:"SendTokensComponent",props:["recipient","tokens"],data(){return{filterTextInput:"",hasBlankCharacter:!1,inputReceiver:null,inputToken:null,inputTokenAmount:null,inputTokenBalance:null,recipientAddress:null,tokenList:[],waiting:!1}},components:{ConnectWalletButton:j},mounted(){this.inputReceiver=this.recipient,this.processRecipient(this.recipient),this.findBlankCharacter(),this.tokenList=this.tokens.tokens,this.selectInputToken(this.tokenList[0])},computed:{filteredTokensInput(){const e=new RegExp(this.filterTextInput,"i");return this.tokenList.filter(t=>e.test(t.symbol))},formatInputTokenBalance(){return this.inputTokenBalance?this.inputTokenBalance==0?0:this.inputTokenBalance>100?Number(this.inputTokenBalance).toFixed(2):Number(this.inputTokenBalance).toFixed(4):0},inputAmountLessThanBalance(){return this.inputTokenAmount&&this.inputTokenBalance?Number(this.inputTokenAmount)<=Number(this.inputTokenBalance):!1},isSupportedNetwork(){return this.chainId==this.$config.supportedChainId}},methods:{getTokenBalance:V,hasTextBlankCharacters:x,findBlankCharacter(){this.hasBlankCharacter=!1,this.hasBlankCharacter=x(this.inputReceiver)},async processRecipient(e){if(e)if(M(e))this.recipientAddress=e;else{const t=String(e).trim().toLowerCase().split(".")[0],s="."+String(e).trim().toLowerCase().split(".")[1];s==this.$config.tldName?this.recipientAddress=await F(t,this.signer):s==this.$config.altDomain&&(this.recipientAddress=await H(t))}},async selectInputToken(e){this.inputToken=e,this.inputTokenAmount=null,this.signer&&(this.inputTokenBalance=await this.getTokenBalance(e,this.address,this.signer))},async send(){if(this.inputReceiver.includes(".")&&!this.inputReceiver.endsWith(this.$config.tldName)){if(!this.$config.altDomain)return this.toast.error("Invalid domain name. Only "+this.$config.tldName+" domains are supported.");if(this.$config.altDomain&&!this.inputReceiver.endsWith(this.$config.altDomain))return this.toast.error("Invalid domain name. Only "+this.$config.tldName+" and "+this.$config.altDomain+" domains are supported.")}if(this.waiting=!0,await this.processRecipient(this.inputReceiver),this.recipientAddress==b||this.recipientAddress==null)return this.waiting=!1,this.toast.error("This domain name does not exist, or something went wrong with fetching the domain holder address.");this.inputToken.address==b?this.sendNativeCoin():this.sendErc20Tokens()},async sendErc20Tokens(){const e=new g(this.inputToken.address,w,this.signer);try{const t=await e.transfer(this.recipientAddress,_(this.inputTokenAmount,this.inputToken.decimals)),s=this.toast({component:B,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),r=await t.wait();r.status===1?(this.toast.dismiss(s),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(s),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),console.log(r))}catch(t){console.error(t);try{let s=t.message.split("reason=")[1];s=s.split(", method=")[0],s=s.replace(/"/g,""),s=s.replace("execution reverted:","Error:"),console.log(s),this.toast(s,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}},async sendNativeCoin(){new g(this.inputToken.address,w,this.signer);try{const e=await this.signer.sendTransaction({to:this.recipientAddress,value:_(this.inputTokenAmount,this.inputToken.decimals)}),t=this.toast({component:B,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),s=await e.wait();s.status===1?(this.toast.dismiss(t),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),console.log(s))}catch(e){console.error(e);try{let t=e.message.split("reason=")[1];t=t.split(", method=")[0],t=t.replace(/"/g,""),t=t.replace("execution reverted:","Error:"),console.log(t),this.toast(t,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}},setMaxInputTokenAmount(){this.inputTokenAmount=String(this.inputTokenBalance)},subtractInputTokenBalance(){this.inputTokenBalance=Number(this.inputTokenBalance)-Number(this.inputTokenAmount)}},setup(){const{address:e,chainId:t,isActivated:s,signer:r}=L(),i=U();return{address:e,chainId:t,isActivated:s,signer:r,toast:i}},watch:{async isActivated(){this.address&&(this.inputTokenBalance=await this.getTokenBalance(this.inputToken,this.address,this.signer))}}},q={class:"mb-3"},O={class:"input-group"},Q={key:0,class:"input-group-text",id:"basic-addon3"},Y=n("i",{class:"bi bi-exclamation-triangle-fill"},null,-1),Z=[Y],z={key:0,class:"form-text",id:"basic-addon4"},G=n("i",{class:"bi bi-exclamation-triangle-fill"},null,-1),K={class:"input-group mb-1 mt-3"},X={class:"btn btn-primary dropdown-toggle",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},J={class:"dropdown-menu p-2"},$=["onClick"],tt=n("small",null,"MAX",-1),et=[tt],nt=n("em",null,"Balance: ",-1),st={class:"cursor-pointer hover-color"},it={class:"d-flex justify-content-center mt-4"},ot={key:1,disabled:!0,class:"btn btn-outline-primary",type:"button"},at=["disabled"],rt={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},lt={key:3,disabled:!0,class:"btn btn-outline-primary",type:"button"},ct={key:4,disabled:!0,class:"btn btn-outline-primary",type:"button"};function ut(e,t,s,r,i,o){const h=C("ConnectWalletButton");return l(),c("div",null,[n("div",q,[n("div",O,[i.hasBlankCharacter?(l(),c("span",Q,Z)):u("",!0),m(n("input",{"onUpdate:modelValue":t[0]||(t[0]=a=>i.inputReceiver=a),type:"text",class:"form-control",id:"basic-url","aria-describedby":"basic-addon3 basic-addon4",placeholder:"Enter recipient's domain name or address",onKeyup:t[1]||(t[1]=(...a)=>o.findBlankCharacter&&o.findBlankCharacter(...a))},null,544),[[k,i.inputReceiver]])]),i.hasBlankCharacter?(l(),c("div",z,[G,f(" This domain name contains a blank character: "+d(encodeURIComponent(i.inputReceiver))+". Proceed with caution. ",1)])):u("",!0)]),n("div",K,[n("button",X,d(i.inputToken?.symbol),1),n("ul",J,[m(n("input",{class:"form-control mb-2",placeholder:"Filter tokens","onUpdate:modelValue":t[2]||(t[2]=a=>i.filterTextInput=a)},null,512),[[k,i.filterTextInput]]),(l(!0),c(A,null,W(o.filteredTokensInput,a=>(l(),c("li",{key:a.address,class:"cursor-pointer"},[n("span",{onClick:T=>o.selectInputToken(a),class:"dropdown-item"},d(a.symbol)+" ("+d(a.name)+")",9,$)]))),128))]),m(n("input",{"onUpdate:modelValue":t[3]||(t[3]=a=>i.inputTokenAmount=a),type:"text",class:"form-control",placeholder:"0.00"},null,512),[[k,i.inputTokenAmount]]),n("button",{onClick:t[4]||(t[4]=(...a)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...a)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},et)]),n("small",{onClick:t[5]||(t[5]=(...a)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...a))},[nt,n("em",st,d(o.formatInputTokenBalance)+" "+d(i.inputToken?.symbol),1)]),n("div",it,[r.isActivated?u("",!0):(l(),D(h,{key:0,class:"btn btn-outline-primary",btnText:"Connect wallet"})),r.isActivated&&!i.inputTokenAmount&&o.isSupportedNetwork?(l(),c("button",ot," Send tokens ")):u("",!0),r.isActivated&&i.inputTokenAmount&&o.inputAmountLessThanBalance&&o.isSupportedNetwork?(l(),c("button",{key:2,disabled:i.waiting||!i.inputToken||!i.inputTokenAmount||!r.isActivated||!o.inputAmountLessThanBalance||!i.inputReceiver||!o.isSupportedNetwork,class:"btn btn-outline-primary",type:"button",onClick:t[6]||(t[6]=(...a)=>o.send&&o.send(...a))},[i.waiting?(l(),c("span",rt)):u("",!0),f(" Send tokens ")],8,at)):u("",!0),r.isActivated&&i.inputTokenAmount&&!o.inputAmountLessThanBalance&&o.isSupportedNetwork?(l(),c("button",lt," Balance too low ")):u("",!0),r.isActivated&&!o.isSupportedNetwork?(l(),c("button",ct," Wrong network ")):u("",!0)])])}const dt=v(P,[["render",ut]]),pt={name:"SendTokens",components:{SendTokensComponent:dt},computed:{getQueryRecipient(){return this.$route.query.to?this.$route.query.to:null}},setup(){return{tokens:E}}},ht={class:"scroll-500"},mt={class:"card border"},kt={class:"card-body mb-3"},ft={class:"fs-3"},Tt=n("h3",{class:"mt-3"},"Send tokens",-1),bt={class:"d-flex justify-content-center mt-5"},gt={class:"col-12 col-lg-8"};function _t(e,t,s,r,i,o){const h=S,a=R,T=N,I=C("SendTokensComponent");return l(),c(A,null,[p(T,null,{default:y(()=>[p(h,null,{default:y(()=>[f("Send tokens | "+d(e.$config.projectMetadataTitle),1)]),_:1}),p(a,{property:"og:title",content:"Send tokens | "+e.$config.projectMetadataTitle},null,8,["content"])]),_:1}),n("div",ht,[n("div",mt,[n("div",kt,[n("p",ft,[n("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:t[0]||(t[0]=yt=>e.$router.back())})]),Tt,n("div",bt,[n("div",gt,[p(I,{tokens:r.tokens,recipient:o.getQueryRecipient},null,8,["tokens","recipient"])])])])])])],64)}const Rt=v(pt,[["render",_t]]);export{Rt as default};
